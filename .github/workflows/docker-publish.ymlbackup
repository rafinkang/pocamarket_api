# # 워크플로우 이름
# name: Deploy API to EC2

# # 워크플로우 실행 조건: 'master' 브랜치 대상 PR 생성/업데이트 시
# on:
#   pull_request:
#     branches: [ "master" ]

# # 환경 변수 설정
# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#   IMAGE_NAME: pocamarket-api # API 이미지 이름

# jobs:
#   build-and-deploy-api:
#     runs-on: ubuntu-latest
#     steps:
#       # 1. 소스 코드 체크아웃
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # 2. Docker Hub 로그인
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       # 3. 이미지 태그 생성 (PR 번호를 사용)
#       - name: Generate image tag
#         id: image_tag
#         run: echo "tag=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

#       # 4. API 이미지 빌드 및 푸시
#       - name: Build and push API image
#         uses: docker/build-push-action@v5
#         with:
#           context: ./ # API Dockerfile 경로
#           push: true
#           tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.image_tag.outputs.tag }}

#       # 5. SSH를 통해 EC2에 API 배포
#       - name: Deploy API to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USERNAME }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             # EC2 서버에서 실행될 스크립트
#             # docker-compose.yml이 있는 프로젝트 루트 디렉토리로 이동
#             cd /var/www/pocamarket/ # <-- docker-compose.yml이 이 경로에 있어야 합니다.
            
#             # Docker Hub에서 최신 API 이미지를 pull
#             # 'pocamarket-api' 서비스에서 사용할 이미지 이름과 태그를 pull
#             docker pull ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.image_tag.outputs.tag }}
            
#             # .env 파일에 이미지 태그를 업데이트
#             # 이 .env 파일은 docker-compose.yml과 같은 레벨에 생성되며
#             # docker-compose.yml에서 ./pocamarket_api/.env 파일로 참조될 수 있습니다.
#             echo "IMAGE_TAG=${{ steps.image_tag.outputs.tag }}" > ./pocamarket_api/.env # <-- 이 경로로 .env 파일을 생성/업데이트해야 합니다.
            
#             # Docker Compose로 'pocamarket-api' 서비스만 재시작
#             # docker-compose.yml에 정의된 서비스 이름으로 변경해야 합니다.
#             docker-compose up -d --no-deps pocamarket-api
            
#             # 불필요한 이전 이미지들 삭제 (선택 사항)
#             docker image prune -f