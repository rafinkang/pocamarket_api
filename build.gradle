plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.venvas'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
	// 파라미터 이름 인식 유지옵션
    options.compilerArgs << '-parameters'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// 프로젝트에서 사용하는 전역 변수를 설정
ext {
	set('queryDslVersion', "5.1.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Security 의존성 - 사용자 인증(Authentication)과 권한 부여(Authorization)를 처리하는 프레임워크
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// JWT 라이브러리 - 사용자 인증을 위한 토큰 기반 인증 방식 구현
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// json
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// DB 쿼리 확인
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Test Lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	
	// 테스트용 인메모리 DB
	testImplementation 'com.h2database:h2'

	// localDateTime
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}

jar {
    archiveBaseName.set('pocamarket') // 이름을 pocamarket으로 고정
    archiveVersion.set('')     // 버전 없애기
    archiveClassifier.set('')  // 부가 설명 제거
}
